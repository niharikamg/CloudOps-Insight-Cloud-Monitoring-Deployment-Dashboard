# CloudOps Insight - Nginx Configuration for React Frontend
# Author: Niharika (mysorena@mail.uc.edu)
# Academic Project: University of Cincinnati
# Advisor: Bramha

server {
    # Listen on port 80 for HTTP requests
    listen 80;
    listen [::]:80;
    
    # Server name for academic project
    server_name localhost cloudops-insight;
    
    # Document root where React build files are served
    root /usr/share/nginx/html;
    index index.html index.htm;
    
    # Academic project headers
    add_header X-Academic-Project "CloudOps Insight - UC Capstone";
    add_header X-Author "Niharika (mysorena@mail.uc.edu)";
    add_header X-Institution "University of Cincinnati";
    add_header X-Advisor "Bramha";
    
    # Security headers for academic project protection
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Content Security Policy for academic project
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; connect-src 'self' http://localhost:8000 ws://localhost:8000; img-src 'self' data: https:;" always;
    
    # Enable gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # Cache static assets for academic project performance
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Academic-Asset "CloudOps Insight Static Resource";
        access_log off;
        
        # Handle CORS for fonts and assets
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin '*';
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
    }
    
    # API proxy to backend (for Docker network communication)
    location /api/ {
        # Proxy to FastAPI backend container
        proxy_pass http://cloudops-backend:8000/api/;
        proxy_http_version 1.1;
        
        # Headers for proper proxy behavior
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Academic project identification
        proxy_set_header X-Academic-Project "CloudOps Insight";
        proxy_set_header X-Frontend-Origin "React Frontend";
        
        # Timeouts for academic project reliability
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Handle CORS for API requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin '*';
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
    }
    
    # WebSocket proxy for real-time communication
    location /ws/ {
        proxy_pass http://cloudops-backend:8000/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Academic project WebSocket identification
        proxy_set_header X-Academic-WebSocket "CloudOps Insight";
    }
    
    # React Router support - handle client-side routing
    location / {
        try_files $uri $uri/ /index.html;
        
        # Academic project cache control for HTML
        location = /index.html {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            add_header X-Academic-HTML "CloudOps Insight Main Page";
        }
    }
    
    # Academic project info endpoint
    location /academic-info {
        alias /usr/share/nginx/html/academic-info.txt;
        add_header Content-Type "text/plain; charset=utf-8";
        add_header X-Academic-Info "UC Capstone Project Details";
    }
    
    # Health check endpoint for container monitoring
    location /nginx-health {
        access_log off;
        return 200 "healthy - CloudOps Insight Frontend\n";
        add_header Content-Type text/plain;
        add_header X-Academic-Health "Nginx Frontend Health Check";
    }
    
    # Academic project error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # Security: Hide nginx version and server tokens
    server_tokens off;
    
    # Academic project access logging
    access_log /var/log/nginx/cloudops-access.log;
    error_log /var/log/nginx/cloudops-error.log;
    
    # Prevent access to hidden files for security
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Academic project upstream definition (if needed for load balancing)
upstream cloudops-backend {
    server cloudops-backend:8000;
    # Additional backend servers can be added here for scaling
}
